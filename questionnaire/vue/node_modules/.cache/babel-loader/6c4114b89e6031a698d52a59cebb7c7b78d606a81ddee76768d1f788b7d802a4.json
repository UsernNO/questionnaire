{"ast":null,"code":"export default {\n  name: \"FPages\",\n  data() {\n    return {\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 5,\n      // 每页显示的个数\n      total: 0,\n      name: null,\n      fromVisible: false,\n      form: {},\n      //表单校验\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入名称',\n          trigger: 'blur'\n        }],\n        descr: [{\n          required: true,\n          message: '请输入简介',\n          trigger: 'blur'\n        }],\n        user: JSON.parse(localStorage.getItem('xm-user') || '{}')\n      }\n    };\n  },\n  created() {\n    this.load(1);\n  },\n  methods: {\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/pages/update' : '/pages/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n\n    load(pageNum) {\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get(\"/pages/selectPage\", {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          name: this.name\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    reset() {\n      this.name = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    },\n    handleImgSuccess(res) {\n      this.form.img = res.data; //后台返回的url图片赋值给表单\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","pageNum","pageSize","total","fromVisible","form","rules","required","message","trigger","descr","user","JSON","parse","localStorage","getItem","created","load","methods","save","$refs","formRef","validate","valid","$request","url","id","method","then","res","code","$message","success","error","msg","get","params","list","reset","handleCurrentChange","handleImgSuccess","img"],"sources":["src/views/front/Pages.vue"],"sourcesContent":["<template>\r\n    <div class=\"main-content\">\r\n            <div style=\"display: flex\">\r\n\r\n                <div style=\"flex: 1\">\r\n                    <el-button icon=\"\" type=\"primary\" size=\"medium\" class=\"btn-green\">创建新问卷</el-button>\r\n                </div>\r\n\r\n                <div>\r\n                    <el-input v-model=\"name\" style=\"width: 300px;margin-right: 10px\" size=\"medium\" placeholder=\"请输入名称进行问卷搜索\" clearable></el-input>\r\n                    <el-button icon=\"\" type=\"primary\" size=\"medium\" @click=\"load(1)\">搜索</el-button>\r\n                </div>\r\n            </div>\r\n\r\n        <div class=\"card\" v-for=\"item in tableData\" :key=\"item.id\" style=\"margin-bottom: 50px;margin-top:15px;height: 150px;border: 1px solid black\">\r\n                <div style=\"display: flex\">\r\n                    <div style=\"flex: 1; width: 0\">\r\n<!--                style=\"display: flex; align-items: center\"强行居中        -->\r\n                       <div style=\"display: flex; align-items: center;margin-bottom: 35px;display: block\">\r\n                           <el-tag v-if=\"item.saved === '否'\" type=\"warning\">未发布</el-tag>\r\n                           <el-tag v-if=\"item.saved === '是'\" type=\"success\">已发布</el-tag>\r\n                           <span style=\"font-size: 20px;text-align: center;margin-left: 10px\">{{item.name}}</span>\r\n                       </div>\r\n                            <el-button type=\"text\" style=\"font-size: 16px\"><i class=\"el-icon-edit\"></i>  编辑</el-button>\r\n                            <el-button type=\"text\" style=\"font-size: 16px\"><i class=\"el-icon-setting\"></i>  设计</el-button>\r\n                            <el-button type=\"text\" style=\"font-size: 16px\"><i class=\"el-icon-document-copy\"></i>  复制</el-button>\r\n                            <el-button type=\"text\" style=\"font-size: 16px\"><i class=\"el-icon-delete\"></i>  分析</el-button>\r\n                            <el-button type=\"text\" style=\"font-size: 16px;color: #ff5700\"><i class=\"el-icon-delete\"></i>  删除</el-button>\r\n                            <el-button type=\"text\" style=\"font-size: 16px; color: orange\"><i class=\"el-icon-s-marketing\"></i>  数据统计</el-button>\r\n                        <div>\r\n\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div style=\"width: 150px; height: 100px\">\r\n                            <img :src=\"item.img\" alt=\"暂无图片\" style=\"width: 100%;height: 100px;border-radius: 5px;display: block\">\r\n                    </div>\r\n                </div>\r\n        </div>\r\n\r\n        <div>\r\n            <el-pagination\r\n                    background\r\n                    @current-change=\"handleCurrentChange\"\r\n                    :current-page=\"pageNum\"\r\n                    :page-size=\"pageSize\"\r\n                    layout=\"total, prev, pager, next\"\r\n                    :total=\"total\">\r\n            </el-pagination>\r\n        </div>\r\n               \r\n\r\n    </div>\r\n    \r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: \"FPages\",\r\n        data(){\r\n            return{\r\n                tableData: [],  // 所有的数据\r\n                pageNum: 1,   // 当前的页码\r\n                pageSize: 5,  // 每页显示的个数\r\n                total: 0,\r\n                name:null,\r\n                fromVisible: false,\r\n                form: {},\r\n                //表单校验\r\n                rules: {\r\n                    name: [\r\n                        {required: true, message: '请输入名称', trigger: 'blur'},\r\n                    ],\r\n                    descr: [\r\n                        {required: true, message: '请输入简介', trigger: 'blur'},\r\n                    ],\r\n                    user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n                },\r\n            }\r\n        },\r\n        created() {\r\n            this.load(1)\r\n        },\r\n        methods:{\r\n            save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\r\n                this.$refs.formRef.validate((valid) => {\r\n                    if (valid) {\r\n                        this.$request({\r\n                            url: this.form.id ? '/pages/update' : '/pages/add',\r\n                            method: this.form.id ? 'PUT' : 'POST',\r\n                            data: this.form\r\n                        }).then(res => {\r\n                            if (res.code === '200') {  // 表示成功保存\r\n                                this.$message.success('保存成功')\r\n                                this.load(1)\r\n                                this.fromVisible = false\r\n                            } else {\r\n                                this.$message.error(res.msg)  // 弹出错误的信息\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            },\r\n           load(pageNum){\r\n              if(pageNum)this.pageNum = pageNum;\r\n              this.$request.get(\"/pages/selectPage\",{\r\n                  params:{\r\n                      pageNum : this.pageNum,\r\n                      pageSize : this.pageSize,\r\n                      name : this.name\r\n                  }\r\n              }).then(res =>{\r\n                  this.tableData = res.data?.list\r\n                  this.total = res.data?.total\r\n              })\r\n           },\r\n            reset() {\r\n                this.name = null\r\n                this.load(1)\r\n            },\r\n            handleCurrentChange(pageNum){\r\n               this.load(pageNum)\r\n            },\r\n            handleImgSuccess(res){\r\n               this.form.img = res.data  //后台返回的url图片赋值给表单\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":"AA2DA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;MAAA;MACAC,OAAA;MAAA;MACAC,QAAA;MAAA;MACAC,KAAA;MACAL,IAAA;MACAM,WAAA;MACAC,IAAA;MACA;MACAC,KAAA;QACAR,IAAA,GACA;UAAAS,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAC,KAAA,GACA;UAAAH,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAE,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,IAAA;EACA;EACAC,OAAA;IACAC,KAAA;MAAA;MACA,KAAAC,KAAA,CAAAC,OAAA,CAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAC,QAAA;YACAC,GAAA,OAAApB,IAAA,CAAAqB,EAAA;YACAC,MAAA,OAAAtB,IAAA,CAAAqB,EAAA;YACA3B,IAAA,OAAAM;UACA,GAAAuB,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,IAAA;cAAA;cACA,KAAAC,QAAA,CAAAC,OAAA;cACA,KAAAf,IAAA;cACA,KAAAb,WAAA;YACA;cACA,KAAA2B,QAAA,CAAAE,KAAA,CAAAJ,GAAA,CAAAK,GAAA;YACA;UACA;QACA;MACA;IACA;;IACAjB,KAAAhB,OAAA;MACA,IAAAA,OAAA,OAAAA,OAAA,GAAAA,OAAA;MACA,KAAAuB,QAAA,CAAAW,GAAA;QACAC,MAAA;UACAnC,OAAA,OAAAA,OAAA;UACAC,QAAA,OAAAA,QAAA;UACAJ,IAAA,OAAAA;QACA;MACA,GAAA8B,IAAA,CAAAC,GAAA;QACA,KAAA7B,SAAA,GAAA6B,GAAA,CAAA9B,IAAA,EAAAsC,IAAA;QACA,KAAAlC,KAAA,GAAA0B,GAAA,CAAA9B,IAAA,EAAAI,KAAA;MACA;IACA;IACAmC,MAAA;MACA,KAAAxC,IAAA;MACA,KAAAmB,IAAA;IACA;IACAsB,oBAAAtC,OAAA;MACA,KAAAgB,IAAA,CAAAhB,OAAA;IACA;IACAuC,iBAAAX,GAAA;MACA,KAAAxB,IAAA,CAAAoC,GAAA,GAAAZ,GAAA,CAAA9B,IAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}