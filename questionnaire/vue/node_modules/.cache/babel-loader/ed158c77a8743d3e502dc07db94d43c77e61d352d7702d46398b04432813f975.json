{"ast":null,"code":"export default {\n  name: \"Design\",\n  data() {\n    return {\n      pages: {},\n      questionList: []\n    };\n  },\n  created() {\n    this.load();\n  },\n  methods: {\n    //问卷预览功能\n    preview(pageId) {\n      let flag = false; //判断选项是否为空，如果为空 则是true\n      for (let i = 0; i < this.questionList.length; i++) {\n        if (this.questionList[i].type === '单选题' || this.questionList[i].type === '多选题') {\n          if (!this.questionList[i].questionItemList?.length) {\n            this.$message.warning('单选或者多选需要添加新选项');\n            return;\n          }\n        }\n        if (!this.questionList[i].name) {\n          this.$message.warning('请填写题目名称');\n          return;\n        }\n      }\n      window.open('/front/preview?pageId=' + pageId);\n    },\n    //确认添加选项\n    addQuestionItem(question) {\n      this.$request.post('/questionItem/add', {\n        questionId: question.id,\n        content: question.newContent\n      }).then(res => {\n        if (res.code === '200') {\n          this.$message.success('更新操作成功');\n          this.load();\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    addQuestion(type) {\n      this.$request.post('/question/addFontUser', {\n        name: ' ',\n        type: type,\n        pageId: this.pages.id\n      }).then(res => {\n        if (res.code === '200') {\n          this.$message.success('更新操作成功');\n          this.load();\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    //更新数据，需要把date数据传入后台\n    changeQuestionName(question) {\n      let data = JSON.parse(JSON.stringify(question)); //编译question\n      this.$request.put('/question/update', data).then(res => {\n        if (res.code === '200') {\n          this.$message.success('更新成功');\n          this.load(); //重启\n        } else {\n          this.$message.error(res.msg); //弹出错误\n        }\n      });\n    },\n\n    //更新选项信息\n    changeQuestionItem(questionItem) {\n      let data = JSON.parse(JSON.stringify(questionItem));\n      this.$request.put('/questionItem/update', data).then(res => {\n        if (res.code === '200') {\n          this.$message.success(\"更新成功\");\n          this.load();\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    load() {\n      let pageId = this.$route.query.pageId; //这个方式拿到home传的值\n      this.$request.get('/pages/selectById/' + pageId).then(res => {\n        //注意Id后面需要添加/否则报错404\n        this.pages = res.data || {};\n      });\n      //获取题目信息。\n      this.$request.get('/question/selectByPageId', {\n        params: {\n          pageId: pageId\n        }\n      }).then(res => {\n        this.questionList = res.data || [];\n      });\n    },\n    delQuestion(questionId) {\n      //单个删除\n      this.$confirm('确定要删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/question/delete/' + questionId).then(res => {\n          if (res.code === '200') {\n            this.$message.success('操作成功');\n            this.load();\n          } else {\n            this.$message.error(res.msg);\n          }\n        });\n      }).catch(() => {});\n    },\n    delQuestionItemId(questionItemId) {\n      //选项删除\n      this.$confirm('确定要删除吗？', '确定删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('questionItem/delete/' + questionItemId).then(res => {\n          if (res.code === '200') {\n            this.$message.success(\"操作成功\");\n            this.load();\n          } else {\n            this.$message.error(res.msg);\n          }\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","pages","questionList","created","load","methods","preview","pageId","flag","i","length","type","questionItemList","$message","warning","window","open","addQuestionItem","question","$request","post","questionId","id","content","newContent","then","res","code","success","error","msg","addQuestion","changeQuestionName","JSON","parse","stringify","put","changeQuestionItem","questionItem","$route","query","get","params","delQuestion","$confirm","response","delete","catch","delQuestionItemId","questionItemId"],"sources":["src/views/front/Design.vue"],"sourcesContent":["<template>\r\n    <div class=\"main-content\">\r\n        <div class=\"card\">\r\n            <div style=\"display: flex; margin-bottom: 20px\" >\r\n                <div style=\"flex:1\">\r\n                       <span style=\"font-size: 24px;margin-right: 10px\"> {{pages.name}}</span>\r\n                    <el-tag v-if=\"pages.saved === '否'\">未发布</el-tag>\r\n                    <el-tag v-else type=\"success\">已发布</el-tag>\r\n                </div>\r\n                <div>\r\n                    <el-button type=\"primary\"><i class=\"el-icon-share\" style=\"margin-right: 10px\"></i> 分享</el-button>\r\n                    <el-button type=\"info\" @click=\"preview(pages.id)\"><i class=\"el-icon-video-play\" style=\"margin-right: 10px\"></i> 预览</el-button>\r\n                    <el-button type=\"success\"><i class=\"el-icon-s-promotion\" style=\"margin-right: 10px\"></i> 发布</el-button>\r\n                </div>\r\n            </div>\r\n\r\n            <div style=\"margin-bottom: 20px\">\r\n                <el-button type=\"primary\" @click=\"addQuestion('单选题')\">新建单选题</el-button>\r\n                <el-button type=\"info\" @click=\"addQuestion('多选题')\">新建多选题</el-button>\r\n                <el-button type=\"success\" @click=\"addQuestion('填空题')\">新建填空题</el-button>\r\n            </div>\r\n\r\n            <div>\r\n                <div v-for=\"(item,index) in questionList\" :key=\"item.id\" style=\"margin-bottom:15px\">\r\n                        <div>\r\n                                <span style=\"font-weight: bold;margin-right:10px\">题目{{index + 1}}</span>\r\n                            <el-input v-model=\"item.name\" style=\"width: 70%;margin-right: 10px\" @change=\"changeQuestionName(item)\"></el-input>\r\n                            <el-tag style=\"margin-right: 5px; color: #df4141;\" v-if=\"item.type === '单选题'\">{{item.type}}</el-tag>\r\n                            <el-tag style=\"margin-right: 5px; color: #df4141;\" v-if=\"item.type === '多选题'\">{{item.type}}</el-tag>\r\n                            <el-tag style=\"margin-right: 5px; color: #ffae35;\" v-if=\"item.type === '填空题'\">{{item.type}}</el-tag>\r\n                            <span style=\"color: #8c939d; cursor: pointer;  font-size: 12px\" @click=\"delQuestion(item.id)\"><i class=\"el-icon-delete\"></i>删除</span>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <div v-for=\"(sub,subIndex) in item.questionItemList\" :key=\"sub.id\" style=\"margin: 10px 0\">\r\n                                <div style=\"padding-left:40px;\">\r\n                                    <span>选项{{subIndex + 1}}</span>\r\n                                    <el-input v-model=\"sub.content\" style=\"width: 50%\" @change=\"changeQuestionItem(sub)\"></el-input>\r\n                                    <span style=\"color: #8c939d; cursor: pointer;  font-size: 12px;margin-left: 5px\" @click=\"delQuestionItemId(sub.id)\"><i class=\"el-icon-delete\"></i>删除</span>\r\n                                </div>\r\n                            </div>\r\n                            <div style=\"padding-left:40px;\">\r\n                                <span style=\"margin-right: 5px;color: #2a60c9\">新选项</span>\r\n                                <el-input v-model=\"item.newContent\" style=\"width: 50%;margin-right:5px\"></el-input>\r\n                                <el-button style=\"background-color: #df4141;color: white\" @click=\"addQuestionItem(item)\">确认添加</el-button>\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: \"Design\",\r\n        data(){\r\n            return{\r\n                pages:{},\r\n                questionList:[]\r\n            }\r\n        },\r\n        created() {\r\n            this.load();\r\n        },\r\n        methods:{\r\n            //问卷预览功能\r\n            preview(pageId){\r\n                let  flag = false; //判断选项是否为空，如果为空 则是true\r\n                for (let i = 0; i < this.questionList.length ; i++) {\r\n                    if(this.questionList[i].type === '单选题' || this.questionList[i].type === '多选题'){\r\n                        if  (!this.questionList[i].questionItemList?.length) {\r\n                            this.$message.warning('单选或者多选需要添加新选项');\r\n                            return\r\n                        }\r\n                    }\r\n                    if (!this.questionList[i].name) {\r\n                        this.$message.warning('请填写题目名称');\r\n                        return;\r\n                    }\r\n                }\r\n                window.open('/front/preview?pageId=' + pageId)\r\n            },\r\n            //确认添加选项\r\n            addQuestionItem(question){\r\n                this.$request.post('/questionItem/add',  {questionId : question.id,content : question.newContent}).then(res =>{\r\n                    if(res.code === '200'){\r\n                        this.$message.success('更新操作成功');\r\n                        this.load();\r\n                    }else{\r\n                        this.$message.error(res.msg);\r\n                    }\r\n                })\r\n            },\r\n            addQuestion(type){\r\n                this.$request.post('/question/addFontUser',  {name: ' ', type: type , pageId : this.pages.id}).then(res =>{\r\n                    if(res.code === '200'){\r\n                        this.$message.success('更新操作成功');\r\n                        this.load();\r\n                    }else{\r\n                        this.$message.error(res.msg);\r\n                    }\r\n                })\r\n            },\r\n            //更新数据，需要把date数据传入后台\r\n            changeQuestionName(question){\r\n                let data = JSON.parse(JSON.stringify(question));  //编译question\r\n                this.$request.put('/question/update',data).then(res=>{\r\n                        if(res.code === '200'){\r\n                                this.$message.success('更新成功');\r\n                                this.load();  //重启\r\n                        }else{\r\n                            this.$message.error(res.msg) //弹出错误\r\n                        }\r\n                })\r\n            },\r\n            //更新选项信息\r\n            changeQuestionItem(questionItem){\r\n                let  data = JSON.parse(JSON.stringify(questionItem));\r\n                this.$request.put('/questionItem/update',data).then(res =>{\r\n                    if(res.code === '200'){\r\n                        this.$message.success(\"更新成功\")\r\n                        this.load();\r\n                    }else{\r\n                        this.$message.error(res.msg)\r\n                    }\r\n                })\r\n            },\r\n            load(){\r\n                let  pageId = this.$route.query.pageId; //这个方式拿到home传的值\r\n                this.$request.get('/pages/selectById/' + pageId).then(res =>{ //注意Id后面需要添加/否则报错404\r\n                    this.pages = res.data || {}\r\n                })\r\n                //获取题目信息。\r\n                this.$request.get('/question/selectByPageId',{\r\n                    params:{\r\n                        pageId:pageId\r\n                    }\r\n                }).then(res=>{\r\n                    this.questionList = res.data || []\r\n                })\r\n            },\r\n            delQuestion(questionId){  //单个删除\r\n                this.$confirm('确定要删除吗？','确认删除',{type:\"warning\"}).then(response =>{\r\n                    this.$request.delete('/question/delete/' + questionId).then(res =>{\r\n                        if(res.code === '200'){\r\n                            this.$message.success('操作成功');\r\n                            this.load()\r\n                        }else{\r\n                            this.$message.error(res.msg)\r\n                        }\r\n                    })\r\n                }).catch(()=>{\r\n                })\r\n            },\r\n            delQuestionItemId(questionItemId){  //选项删除\r\n                this.$confirm('确定要删除吗？','确定删除',{type:\"warning\"}).then(response =>{\r\n                    this.$request.delete('questionItem/delete/' + questionItemId).then(res=>{\r\n                        if(res.code ==='200'){\r\n                            this.$message.success(\"操作成功\");\r\n                            this.load();\r\n                        }else{\r\n                            this.$message.error(res.msg);\r\n                        }\r\n                    })\r\n                })\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}